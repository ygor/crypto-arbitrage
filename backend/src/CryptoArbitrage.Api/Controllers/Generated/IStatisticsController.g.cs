//----------------------
// <auto-generated>
//     Generated using controller method definitions
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'"
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using CryptoArbitrage.Api.Models;

namespace CryptoArbitrage.Api.Controllers.Interfaces
{
    /// <summary>
    /// Interface for the Statistics controller
    /// </summary>
    public interface IStatisticsController
    {
        /// <summary>
        /// Gets statistics for the current day.
        /// </summary>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>The statistics for the current day.</returns>
        Task<ArbitrageStatistics> GetCurrentDayStatisticsAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets statistics for the previous day.
        /// </summary>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>The statistics for the previous day.</returns>
        Task<ArbitrageStatistics> GetPreviousDayStatisticsAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets statistics for the current week.
        /// </summary>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>The statistics for the current week.</returns>
        Task<ArbitrageStatistics> GetCurrentWeekStatisticsAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets statistics for the previous week.
        /// </summary>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>The statistics for the previous week.</returns>
        Task<ArbitrageStatistics> GetPreviousWeekStatisticsAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets statistics for the current month.
        /// </summary>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>The statistics for the current month.</returns>
        Task<ArbitrageStatistics> GetCurrentMonthStatisticsAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets statistics for the previous month.
        /// </summary>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>The statistics for the previous month.</returns>
        Task<ArbitrageStatistics> GetPreviousMonthStatisticsAsync(CancellationToken cancellationToken = default);
    }
}
