{
  "openapi": "3.0.0",
  "info": {
    "title": "Crypto Arbitrage API",
    "version": "1.0.0",
    "description": "API for the Crypto Arbitrage application"
  },
  "servers": [
    {
      "url": "http://localhost:5001",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Arbitrage",
      "description": "Endpoints related to arbitrage opportunities and trades"
    },
    {
      "name": "Opportunities",
      "description": "Endpoints for querying arbitrage opportunities"
    },
    {
      "name": "Trades",
      "description": "Endpoints for managing and querying trades"
    },
    {
      "name": "Settings",
      "description": "Endpoints for configuring the system"
    },
    {
      "name": "Statistics",
      "description": "Endpoints for retrieving performance statistics"
    },
    {
      "name": "Bot",
      "description": "Endpoints for controlling the arbitrage bot"
    }
  ],
  "paths": {
    "/api/arbitrage/opportunities": {
      "get": {
        "summary": "Get arbitrage opportunities",
        "operationId": "getArbitrageOpportunities",
        "tags": [
          "Arbitrage"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of opportunities to return"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of arbitrage opportunities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArbitrageOpportunity"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/arbitrage/trades": {
      "get": {
        "summary": "Get arbitrage trade results",
        "operationId": "getArbitrageTrades",
        "tags": [
          "Arbitrage"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of trades to return"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of arbitrage trades",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradeResult"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/arbitrage/statistics": {
      "get": {
        "summary": "Get arbitrage statistics",
        "operationId": "getArbitrageStatistics",
        "tags": [
          "Arbitrage",
          "Statistics"
        ],
        "responses": {
          "200": {
            "description": "Arbitrage system statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArbitrageStatistics"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/opportunities/recent": {
      "get": {
        "summary": "Get recent arbitrage opportunities",
        "operationId": "getRecentOpportunities",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Maximum number of recent opportunities to return"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recent arbitrage opportunities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArbitrageOpportunity"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/opportunities": {
      "get": {
        "summary": "Get arbitrage opportunities by time range",
        "operationId": "getOpportunitiesByTimeRange",
        "tags": [
          "Opportunities"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Start time (ISO 8601 format)"
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "End time (ISO 8601 format)"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of arbitrage opportunities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArbitrageOpportunity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid date format"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/trades/recent": {
      "get": {
        "summary": "Get recent arbitrage trades",
        "operationId": "getRecentTrades",
        "tags": [
          "Trades"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Maximum number of recent trades to return"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recent trades",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradeResult"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/trades": {
      "get": {
        "summary": "Get arbitrage trades by time range",
        "operationId": "getTradesByTimeRange",
        "tags": [
          "Trades"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Start time (ISO 8601 format)"
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "End time (ISO 8601 format)"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of trades",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TradeResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid date format"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/risk-profile": {
      "get": {
        "summary": "Get risk profile",
        "operationId": "getRiskProfile",
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Current risk profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskProfile"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update risk profile",
        "operationId": "updateRiskProfile",
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Risk profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/arbitrage": {
      "get": {
        "summary": "Get arbitrage configuration",
        "operationId": "getArbitrageConfig",
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "Current arbitrage configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArbitrageConfig"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update arbitrage configuration",
        "operationId": "updateArbitrageConfig",
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArbitrageConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Arbitrage configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/exchanges": {
      "get": {
        "summary": "Get exchange configurations",
        "operationId": "getExchangeConfigurations",
        "tags": [
          "Settings"
        ],
        "responses": {
          "200": {
            "description": "List of exchange configurations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExchangeConfig"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Update exchange configurations",
        "operationId": "updateExchangeConfigurations",
        "tags": [
          "Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExchangeConfig"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exchange configurations updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/bot/start": {
      "post": {
        "summary": "Start the arbitrage bot",
        "operationId": "startArbitrageBot",
        "tags": [
          "Bot"
        ],
        "responses": {
          "200": {
            "description": "Bot started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/bot/stop": {
      "post": {
        "summary": "Stop the arbitrage bot",
        "operationId": "stopArbitrageBot",
        "tags": [
          "Bot"
        ],
        "responses": {
          "200": {
            "description": "Bot stopped successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/bot/status": {
      "get": {
        "summary": "Get the status of the arbitrage bot",
        "operationId": "getBotStatus",
        "tags": [
          "Bot"
        ],
        "responses": {
          "200": {
            "description": "Current bot status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isRunning": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/statistics": {
      "get": {
        "summary": "Get general statistics",
        "operationId": "getStatistics",
        "tags": [
          "Statistics"
        ],
        "responses": {
          "200": {
            "description": "General system statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArbitrageStatistics"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/bot/activity-logs": {
      "get": {
        "summary": "Get bot activity logs",
        "operationId": "getActivityLogs",
        "tags": [
          "Bot"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Maximum number of log entries to return"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of activity log entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityLogEntry"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/settings/bot/exchange-status": {
      "get": {
        "summary": "Get exchange status",
        "operationId": "getExchangeStatus",
        "tags": [
          "Bot"
        ],
        "responses": {
          "200": {
            "description": "Status of all connected exchanges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExchangeStatus"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TradingPair": {
        "type": "object",
        "properties": {
          "baseCurrency": {
            "type": "string",
            "example": "BTC"
          },
          "quoteCurrency": {
            "type": "string",
            "example": "USDT"
          }
        },
        "required": [
          "baseCurrency",
          "quoteCurrency"
        ]
      },
      "ArbitrageOpportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tradingPair": {
            "$ref": "#/components/schemas/TradingPair"
          },
          "buyExchangeId": {
            "type": "string",
            "example": "binance"
          },
          "sellExchangeId": {
            "type": "string",
            "example": "coinbase"
          },
          "buyPrice": {
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "description": "0=Detected, 1=Executing, 2=Executed, 3=Failed, 4=Missed"
          },
          "potentialProfit": {
            "type": "number",
            "format": "double"
          },
          "spreadPercentage": {
            "type": "number",
            "format": "double"
          },
          "estimatedProfit": {
            "type": "number",
            "format": "double"
          },
          "detectedAt": {
            "type": "string",
            "format": "date-time"
          },
          "spread": {
            "type": "number",
            "format": "double"
          },
          "effectiveQuantity": {
            "type": "number",
            "format": "double"
          },
          "isQualified": {
            "type": "boolean"
          }
        }
      },
      "TradeResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "opportunityId": {
            "type": "string"
          },
          "tradingPair": {
            "$ref": "#/components/schemas/TradingPair"
          },
          "buyExchangeId": {
            "type": "string"
          },
          "sellExchangeId": {
            "type": "string"
          },
          "buyPrice": {
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3
            ],
            "description": "0=Pending, 1=Executing, 2=Completed, 3=Failed"
          },
          "profitAmount": {
            "type": "number",
            "format": "double"
          },
          "profitPercentage": {
            "type": "number",
            "format": "double"
          },
          "fees": {
            "type": "number",
            "format": "double"
          },
          "executionTimeMs": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ArbitrageStatistics": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "totalVolume": {
            "type": "number",
            "format": "double"
          },
          "totalFees": {
            "type": "number",
            "format": "double"
          },
          "averageProfit": {
            "type": "number",
            "format": "double"
          },
          "highestProfit": {
            "type": "number",
            "format": "double"
          },
          "lowestProfit": {
            "type": "number",
            "format": "double"
          },
          "totalOpportunitiesDetected": {
            "type": "integer"
          },
          "totalTradesExecuted": {
            "type": "integer"
          },
          "successfulTrades": {
            "type": "integer"
          },
          "failedTrades": {
            "type": "integer"
          },
          "averageExecutionTimeMs": {
            "type": "number",
            "format": "double"
          },
          "profitFactor": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RiskProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "minProfitPercentage": {
            "type": "number",
            "format": "double"
          },
          "minProfitAmount": {
            "type": "number",
            "format": "double"
          },
          "minimumProfitPercentage": {
            "type": "number",
            "format": "double"
          },
          "maxSlippagePercentage": {
            "type": "number",
            "format": "double"
          },
          "riskTolerance": {
            "type": "number",
            "format": "double"
          },
          "maxRetryAttempts": {
            "type": "integer"
          },
          "maxSpreadVolatility": {
            "type": "number",
            "format": "double"
          },
          "stopLossPercentage": {
            "type": "number",
            "format": "double"
          },
          "dailyLossLimitPercent": {
            "type": "number",
            "format": "double"
          },
          "usePriceProtection": {
            "type": "boolean"
          },
          "maxTradeAmount": {
            "type": "number",
            "format": "double"
          },
          "maxAssetExposurePercentage": {
            "type": "number",
            "format": "double"
          },
          "maxTotalExposurePercentage": {
            "type": "number",
            "format": "double"
          },
          "dynamicSizingFactor": {
            "type": "number",
            "format": "double"
          },
          "maxCapitalPerTradePercent": {
            "type": "number",
            "format": "double"
          },
          "maxCapitalPerAssetPercent": {
            "type": "number",
            "format": "double"
          },
          "executionAggressiveness": {
            "type": "number",
            "format": "double"
          },
          "maxExecutionTimeMs": {
            "type": "number",
            "format": "double"
          },
          "orderBookDepthFactor": {
            "type": "number",
            "format": "double"
          },
          "cooldownPeriodMs": {
            "type": "integer"
          },
          "maxConcurrentTrades": {
            "type": "integer"
          },
          "tradeCooldownMs": {
            "type": "integer"
          },
          "useAdaptiveParameters": {
            "type": "boolean"
          }
        }
      },
      "ArbitrageConfig": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "enabledTradingPairs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledBaseCurrencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledQuoteCurrencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledExchanges": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledExchangePairs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangePair"
            }
          },
          "scanIntervalMs": {
            "type": "integer"
          },
          "maxConcurrentScans": {
            "type": "integer"
          },
          "autoTradeEnabled": {
            "type": "boolean"
          },
          "maxDailyTrades": {
            "type": "integer"
          },
          "maxDailyVolume": {
            "type": "number",
            "format": "double"
          },
          "minOrderBookDepth": {
            "type": "number",
            "format": "double"
          },
          "useWebsockets": {
            "type": "boolean"
          },
          "usePolling": {
            "type": "boolean"
          },
          "pollingIntervalMs": {
            "type": "integer"
          },
          "evaluationStrategy": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3
            ]
          },
          "executionStrategy": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3
            ]
          }
        }
      },
      "ExchangePair": {
        "type": "object",
        "properties": {
          "buyExchangeId": {
            "type": "string"
          },
          "sellExchangeId": {
            "type": "string"
          }
        },
        "required": [
          "buyExchangeId",
          "sellExchangeId"
        ]
      },
      "ExchangeConfig": {
        "type": "object",
        "properties": {
          "exchangeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string"
          },
          "apiSecret": {
            "type": "string"
          },
          "maxRequestsPerSecond": {
            "type": "integer"
          }
        },
        "required": [
          "exchangeId",
          "isEnabled"
        ]
      },
      "ActivityLogEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "Info",
              "Warning",
              "Error",
              "Success"
            ]
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "relatedEntityId": {
            "type": "string"
          },
          "relatedEntityType": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "timestamp",
          "type",
          "message"
        ]
      },
      "ExchangeStatus": {
        "type": "object",
        "properties": {
          "exchangeId": {
            "type": "string"
          },
          "exchangeName": {
            "type": "string"
          },
          "isUp": {
            "type": "boolean"
          },
          "lastChecked": {
            "type": "string",
            "format": "date-time"
          },
          "responseTimeMs": {
            "type": "number",
            "format": "double"
          },
          "additionalInfo": {
            "type": "string"
          }
        },
        "required": [
          "exchangeId",
          "exchangeName",
          "isUp",
          "lastChecked",
          "responseTimeMs"
        ]
      }
    }
  }
}
